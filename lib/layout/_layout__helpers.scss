/// Create a definitions object for containers
/// @param {Map} $cfg - The config map
/// @return {Map} - The merge result
///
@function layout--create-container-config($cfg) {
    $defaults: (
        container-size: none,
        edge: 0,
        mq: null,
    );

    @return map-merge($defaults, $cfg);
}

/// Create a definitions object for grids
/// @param {Map} $cfg - The config map
/// @return {Map} - The merge result
///
@function layout--create-grid-config($cfg) {
    $defaults: (
        gutter: 0,
        directive: 'auto-fit',
        mq: null,
        num-cols: 1,
    );

    @return map-merge($defaults, $cfg);
}

/// Create a definitions object for the grid root config mixin
/// @param {Map} $cfg - The config map
/// @return {Map} - The merge result
///
@function layout--create-grid-root-config($cfg) {
    $defaults: (
        display: grid,
    );

    @return map-merge($defaults, $cfg);
}

/// Define a container structure
/// @param {Map} $definition - A single container structure definition
///
@mixin layout--container($definition) {
    $definition: layout--create-container-config($definition);

    $container-size: map-get($definition, 'container-size');
    $edge: map-get($definition, 'edge') * 1px;
    $mq: map-get($definition, 'mq');

    $has-container-size: type-of($container-size) == 'number';
    $content-width: if($has-container-size, $container-size - (2 * $edge), auto);
    $border-width: if($has-container-size, 1fr, 0);

    @include mq($mq) {
        grid-template-columns: $border-width $content-width $border-width;
        column-gap: $edge;
        @content;
    }
}

/// Define a grid structure
/// @param {Map} $definition - A single grid structure definition
///
@mixin layout--grid($definition) {
    $definition: layout--create-grid-config($definition);

    $gutter: map-get($definition, 'gutter') * 1px;
    $directive: map-get($definition, 'directive');
    $mq: map-get($definition, 'mq');
    $num-cols: map-get($definition, 'num-cols');

    @include mq($mq) {
        grid-template-columns: repeat(#{$directive}, minmax(calc(#{100% / $num-cols} - #{$gutter}), 1fr));
        //grid-template-columns: repeat($num-cols, 1fr);
        column-gap: $gutter;
        @content;
    }
}
